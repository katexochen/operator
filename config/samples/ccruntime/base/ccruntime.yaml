apiVersion: confidentialcontainers.org/v1beta1
kind: CcRuntime
metadata:
  name: ccruntime
spec:
  # Add fields here
  runtimeName: kata
  ccNodeSelector:
    matchLabels:
      node.kubernetes.io/worker: ""
  config:
    installType: bundle
    payloadImage: quay.io/confidential-containers/runtime-payload:kata-containers
    installDoneLabel:
      katacontainers.io/kata-runtime: "true"
    uninstallDoneLabel:
      katacontainers.io/kata-runtime: "cleanup"
    installerVolumeMounts:
      - mountPath: /etc/crio/
        name: crio-conf
      - mountPath: /etc/containerd/
        name: containerd-conf
      - mountPath: /opt/confidential-containers/
        name: kata-artifacts
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus
      - mountPath: /run/systemd/system
        name: systemd
      - mountPath: /usr/local/bin/
        name: local-bin
    installerVolumes:
      - hostPath:
          path: /etc/crio/
          type: ""
        name: crio-conf
      - hostPath:
          path: /etc/containerd/
          type: ""
        name: containerd-conf
      - hostPath:
          path: /opt/confidential-containers/
          type: DirectoryOrCreate
        name: kata-artifacts
      - hostPath:
          path: /var/run/dbus/system_bus_socket
          type: ""
        name: dbus
      - hostPath:
          path: /run/systemd/system
          type: ""
        name: systemd
      - hostPath:
          path: /usr/local/bin/
          type: ""
        name: local-bin
    installCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "install"]
    uninstallCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "cleanup"]
    cleanupCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "reset"]
    # Uncomment and add the required RuntimeClassNames to be created
    # If this is commented, then the operator creates 3 default runtimeclasses "kata", "kata-clh", "kata-qemu"
    runtimeClassNames: 
      [""]
    postUninstall:
      image: quay.io/confidential-containers/container-engine-for-cc-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        - mountPath: /var/run/dbus/system_bus_socket
          name: dbus
        - mountPath: /run/systemd/system
          name: systemd
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /var/run/dbus/system_bus_socket
            type: ""
          name: dbus
        - hostPath:
            path: /run/systemd/system
            type: ""
          name: systemd
    preInstall:
      image: quay.io/confidential-containers/container-engine-for-cc-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        - mountPath: /var/run/dbus/system_bus_socket
          name: dbus
        - mountPath: /run/systemd/system
          name: systemd
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /var/run/dbus/system_bus_socket
            type: ""
          name: dbus
        - hostPath:
            path: /run/systemd/system
            type: ""
          name: systemd
    environmentVariables:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: "CONFIGURE_CC"
        value: "yes"
