name: enclave-cc e2e tests
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  e2e:
    name: operator enclave-cc e2e tests
    runs-on: ubuntu-22.04
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Build and push to local registry
        run: |
          make docker-build
          make docker-push
        env:
          IMG: localhost:5000/cc-operator:latest

      - name: Build custom kind node image
        uses: docker/build-push-action@v4
        with:
          context: tests/e2e/kind
          load: true
          tags: kindest/node:v1.26.0-coco

      - name: Setup kind cluster
        run: |
          kind create cluster --image "kindest/node:v1.26.0-coco" -n coco-sgx --config tests/e2e/enclave-cc-kind-config.yaml --wait 120s
          kubectl label node coco-sgx-worker node.kubernetes.io/worker=

      - name: Deploy operator from the local registry
        run: |
          cd config/default
          kustomize edit set image localhost:5000/cc-operator:latest
          kubectl apply -k .
          sleep 1
          kubectl wait --for=jsonpath='{.status.conditions[0].status}'=True deployments/cc-operator-controller-manager -n confidential-containers-system

      - name: Install enclave-cc sim
        run: |
          kubectl apply -k config/samples/enclave-cc/sim
          sleep 1
          kubectl wait --for=jsonpath='{.status.runtimeClass}'=enclave-cc ccruntime/ccruntime-enclave-cc-sgx-mode-sim --timeout=90s

      - name: Deploy sample workload
        run: |
          kubectl apply -f tests/e2e/enclave-cc-pod-sim.yaml
          kubectl wait --for=condition=Ready pod/enclave-cc-pod-sim
