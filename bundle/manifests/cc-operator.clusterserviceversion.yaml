apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "confidentialcontainers.org/v1beta1",
          "kind": "CcRuntime",
          "metadata": {
            "name": "ccruntime-sample",
            "namespace": "confidential-containers-system"
          },
          "spec": {
            "ccNodeSelector": {
              "matchLabels": {
                "node.kubernetes.io/worker": ""
              }
            },
            "config": {
              "cleanupCmd": [
                "/opt/kata-artifacts/scripts/kata-deploy.sh",
                "reset"
              ],
              "environmentVariables": [
                {
                  "name": "NODE_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "spec.nodeName"
                    }
                  }
                },
                {
                  "name": "CONFIGURE_CC",
                  "value": "yes"
                }
              ],
              "installCmd": [
                "/opt/kata-artifacts/scripts/kata-deploy.sh",
                "install"
              ],
              "installDoneLabel": {
                "katacontainers.io/kata-runtime": "true"
              },
              "installType": "bundle",
              "installerVolumeMounts": [
                {
                  "mountPath": "/etc/containerd/",
                  "name": "containerd-conf"
                },
                {
                  "mountPath": "/opt/confidential-containers/",
                  "name": "kata-artifacts"
                },
                {
                  "mountPath": "/var/run/dbus/system_bus_socket",
                  "name": "dbus"
                },
                {
                  "mountPath": "/run/systemd/system",
                  "name": "systemd"
                },
                {
                  "mountPath": "/usr/local/bin/",
                  "name": "local-bin"
                }
              ],
              "installerVolumes": [
                {
                  "hostPath": {
                    "path": "/etc/containerd/",
                    "type": ""
                  },
                  "name": "containerd-conf"
                },
                {
                  "hostPath": {
                    "path": "/opt/confidential-containers/",
                    "type": "DirectoryOrCreate"
                  },
                  "name": "kata-artifacts"
                },
                {
                  "hostPath": {
                    "path": "/var/run/dbus/system_bus_socket",
                    "type": ""
                  },
                  "name": "dbus"
                },
                {
                  "hostPath": {
                    "path": "/run/systemd/system",
                    "type": ""
                  },
                  "name": "systemd"
                },
                {
                  "hostPath": {
                    "path": "/usr/local/bin/",
                    "type": ""
                  },
                  "name": "local-bin"
                }
              ],
              "payloadImage": "quay.io/confidential-containers/runtime-payload:kata-containers-5b7009f2f9cdb39099b97a4f868b53ec9f3c383f",
              "postUninstall": {
                "image": "quay.io/confidential-containers/container-engine-for-cc-payload:1034f9fcf947b22eea080a6f77d8e164e2369849",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/confidential-containers/",
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "mountPath": "/etc/systemd/system/",
                    "name": "etc-systemd-system"
                  },
                  {
                    "mountPath": "/var/run/dbus/system_bus_socket",
                    "name": "dbus"
                  },
                  {
                    "mountPath": "/run/systemd/system",
                    "name": "systemd"
                  }
                ],
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/opt/confidential-containers/",
                      "type": "DirectoryOrCreate"
                    },
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/systemd/system/",
                      "type": ""
                    },
                    "name": "etc-systemd-system"
                  },
                  {
                    "hostPath": {
                      "path": "/var/run/dbus/system_bus_socket",
                      "type": ""
                    },
                    "name": "dbus"
                  },
                  {
                    "hostPath": {
                      "path": "/run/systemd/system",
                      "type": ""
                    },
                    "name": "systemd"
                  }
                ]
              },
              "preInstall": {
                "image": "quay.io/confidential-containers/container-engine-for-cc-payload:1034f9fcf947b22eea080a6f77d8e164e2369849",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/confidential-containers/",
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "mountPath": "/etc/systemd/system/",
                    "name": "etc-systemd-system"
                  },
                  {
                    "mountPath": "/var/run/dbus/system_bus_socket",
                    "name": "dbus"
                  },
                  {
                    "mountPath": "/run/systemd/system",
                    "name": "systemd"
                  }
                ],
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/opt/confidential-containers/",
                      "type": "DirectoryOrCreate"
                    },
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/systemd/system/",
                      "type": ""
                    },
                    "name": "etc-systemd-system"
                  },
                  {
                    "hostPath": {
                      "path": "/var/run/dbus/system_bus_socket",
                      "type": ""
                    },
                    "name": "dbus"
                  },
                  {
                    "hostPath": {
                      "path": "/run/systemd/system",
                      "type": ""
                    },
                    "name": "systemd"
                  }
                ]
              },
              "runtimeClassNames": [
                "kata",
                "kata-clh",
                "kata-clh-tdx",
                "kata-clh-tdx-eaa-kbc"
                "kata-qemu",
                "kata-qemu-sev",
                "kata-qemu-tdx",
                "kata-qemu-tdx-eaa-kbc",
                "kata-remote"
              ],
              "uninstallCmd": [
                "/opt/kata-artifacts/scripts/kata-deploy.sh",
                "cleanup"
              ],
              "uninstallDoneLabel": {
                "katacontainers.io/kata-runtime": "cleanup"
              }
            },
            "runtimeName": "kata"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.23.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: cc-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: CcRuntime is the Schema for the ccruntimes API
      displayName: Cc Runtime
      kind: CcRuntime
      name: ccruntimes.confidentialcontainers.org
      version: v1beta1
  description: An operator to deploy and configure confidential containers runtime
    on Kubernetes cluster
  displayName: Confidential Containers Runtime Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - confidentialcontainers.org
          resources:
          - ccruntimes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - confidentialcontainers.org
          resources:
          - ccruntimes/finalizers
          verbs:
          - update
        - apiGroups:
          - confidentialcontainers.org
          resources:
          - ccruntimes/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - node.k8s.io
          resources:
          - runtimeclasses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: cc-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: cc-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: quay.io/confidential-containers/operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: cc-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: cc-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - confidential containers
  - ccruntime
  - kata
  - vm tee
  links:
  - name: Confidential Containers
    url: https://github.com/confidential-containers
  maintainers:
  - email: fidenco
    name: Fabiano
  - email: jensfr
    name: Jens
  - email: bpradipt
    name: Pradipta
  maturity: alpha
  provider:
    name: Confidential Containers Community
    url: https://github.com/confidential-containers
  version: 0.0.1
